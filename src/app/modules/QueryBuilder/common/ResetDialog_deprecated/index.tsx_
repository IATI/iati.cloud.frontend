// @ts-nocheck
import React from "react";
import Button from "@material-ui/core/Button";
import Dialog from "@material-ui/core/Dialog";
import DialogActions from "@material-ui/core/DialogActions";
import DialogContent from "@material-ui/core/DialogContent";
import DialogTitle from "@material-ui/core/DialogTitle";

interface ResetDialogParams {
  message?: string;
  cancelButtonText?: string;
  resetButonText?: string;
  open?: boolean;
}

export const ResetDialog = (props: ResetDialogParams) => {
  const [open, setOpen] = React.useState(props.open);

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <Dialog
      open={open}
      onClose={handleClose}
      aria-labelledby="alert-dialog-title"
      aria-describedby="alert-dialog-description"
      fullWidth
      maxWidth="md"
      // fullScreen
    >
      <DialogContent>
        <DialogTitle
          css={`
            && {
              h2 {
                font-style: normal;
                font-weight: 600;
                font-size: 20px;
                line-height: 30px;
                text-align: center;
                color: #222222;
              }
            }
          `}
          id="alert-dialog-title"
        >
          Are you sure want to reset your query?
        </DialogTitle>

        <DialogActions
          css={`
            && {
              display: flex;
              justify-content: center;
              align-items: center;
            }
          `}
        >
          <Button
            css={`
              && {
                width: 132px;
                height: 48px;
                background: white;
                border-radius: 2px;
                span {
                  font-style: normal;
                  font-weight: 600;
                  font-size: 14px;
                  line-height: 24px;
                  letter-spacing: 1.25397px;
                  color: black;
                  text-transform: capitalize;
                }
              }
            `}
            onClick={handleClose}
            color="primary"
          >
            Cancel
          </Button>
          <Button
            css={`
              && {
                width: 132px;
                height: 48px;
                background: #ed6060;
                border-radius: 2px;
                span {
                  font-family: Inter;
                  font-style: normal;
                  font-weight: 600;
                  font-size: 14px;
                  line-height: 24px;
                  letter-spacing: 1.25397px;
                  color: white;
                  text-transform: capitalize;
                }
              }
            `}
            onClick={() => window.location.reload(false)}
            color="primary"
            autoFocus
          >
            Reset
          </Button>
        </DialogActions>
      </DialogContent>
    </Dialog>
  );
};
