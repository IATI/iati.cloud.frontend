orbs:
  cypress: cypress-io/cypress@1
version: 2.1

# have a look at https://circleci.com/orbs/registry/orb/germade/rsync
executors:
  cypress-executor:
    docker:
      - image: "cypress/included:4.8.0"
    resource_class: large

jobs:
  deploy:
    docker:
      - image: instrumentisto/rsync-ssh
    resource_class: large
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run: eval ssh-agent -s
      - run: ssh -o StrictHostKeyChecking=no zz@206.189.241.202 exit
      - run:
          name: Transfer build to digital ocean instance
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              rsync -O -ave ssh ~/project/build "$SSH_PROD_USER"@"$SSH_HOST_PROD_1":/home/oipa/oipa-query-builder
              rsync -O -ave ssh ~/project/build "$SSH_PROD_USER"@"$SSH_HOST_PROD_2":/home/oipa/oipa-query-builder

            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              rsync -O -ave ssh ~/project/build "$SSH_USER"@"$SSH_HOST_DEV":~/stg-iati-cloud-front
              ssh "$SSH_USER"@"$SSH_HOST_DEV" "./ci_update_front.sh;"
            else
              rsync -O -ave ssh ~/project/build "$SSH_USER"@"$SSH_HOST_DEV":~/stg-iati-cloud-front
              ssh "$SSH_USER"@"$SSH_HOST_DEV" "./ci_update_front.sh;"
            fi

  deploy-test:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
          name: Add SSH KEY
          fingerprints:
            - "21:ee:e6:3e:a8:11:53:67:a1:b2:fa:b3:ce:0a:21:11"
      - run: yarn install
#      - run:
#          name: Load environment variables
#          command: |
#            echo 'export REACT_APP_DOC_FILENAME="$REACT_APP_POSTMAN_FILENAME_STG"' >> $BASH_ENV
#            source $BASH_ENV
#      - run: CI=false yarn build
      - run: eval ssh-agent -s
      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no "$SSH_USER"@"$SSH_HOST_DEV" exit
      - run: rsync -O -ave ssh ~/project/build "$SSH_USER"@"$SSH_HOST_DEV":~/stg-iati-cloud-front
      - run: ssh "$SSH_USER"@"$SSH_HOST_DEV" "./ci_update_front.sh;"

  deploy-staging:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
          name: Add SSH KEY
          fingerprints:
            - "21:ee:e6:3e:a8:11:53:67:a1:b2:fa:b3:ce:0a:21:11"
#      - run: yarn install
#      - run:
#          name: Load environment variables
#          command: |
#            echo 'export REACT_APP_DOC_FILENAME="$REACT_APP_POSTMAN_FILENAME_STG"' >> $BASH_ENV
#            source $BASH_ENV
#      - run: CI=false yarn build
      - run: eval ssh-agent -s
#      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no "$SSH_USER"@"$SSH_HOST_DEV" exit
      - run: rsync -O -ave ssh ~/project/build "$SSH_USER"@"$SSH_HOST_DEV":~/stg-iati-cloud-front
      - run: ssh "$SSH_USER"@"$SSH_HOST_DEV" "./ci_update_front.sh;"

  deploy-production:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
#      - run: yarn install
#      - run:
#          name: Load environment variables
#          command: |
#            echo 'export REACT_APP_DOC_FILENAME="$REACT_APP_POSTMAN_FILENAME_PROD"' >> $BASH_ENV
#            source $BASH_ENV
#      - run: CI=false yarn build
      - run: eval ssh-agent -s
#      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no "$SSH_PROD_USER"@"$SSH_HOST_PROD_1" exit
      - run: rsync -O -ave ssh ~/project/build "$SSH_PROD_USER"@"$SSH_HOST_PROD_1":/home/oipa/oipa-query-builder
      - run: ssh "$SSH_PROD_USER"@"$SSH_HOST_PROD_1" "/home/oipa/ci_update_front.sh;"
      - run: ssh -o StrictHostKeyChecking=no "$SSH_PROD_USER"@"$SSH_HOST_PROD_2" exit
      - run: rsync -O -ave ssh ~/project/build "$SSH_PROD_USER"@"$SSH_HOST_PROD_2":/home/oipa/oipa-query-builder
      - run: ssh "$SSH_PROD_USER"@"$SSH_HOST_PROD_2" "/home/oipa/ci_update_front.sh;"

  release:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - checkout
      - run: npx semantic-release

workflows:
  build-and-test:
    jobs:
      - cypress/install:
          executor: cypress-executor
          pre-steps:
            - run:
                name: Set env variables
                command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    echo 'export REACT_APP_DOC_FILENAME="$REACT_APP_POSTMAN_FILENAME_PROD"' >> $BASH_ENV
                  elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
                    echo 'export REACT_APP_DOC_FILENAME="$REACT_APP_POSTMAN_FILENAME_STG"' >> $BASH_ENV
                  else
                    echo 'export REACT_APP_DOC_FILENAME="$REACT_APP_POSTMAN_FILENAME_STG"' >> $BASH_ENV
                  fi
                  source $BASH_ENV
          yarn: true
          build: yarn build

      - deploy:
          requires:
            - cypress/install

      - cypress/run:
          name: "test local"
          executor: cypress-executor
          yarn: true
#          command: npx cypress run
          start: yarn start
#          wait-on: "http://localhost:3000"
          browser: chrome
          requires:
            - deploy
          record: true
          parallel: true
          parallelism: 6
          group: "all tests"


#      - deploy-test:
#          requires:
#            - cypress/install
#          filters:
#            branches:
#              only: /feature\/.*/
#      - deploy-staging:
#          requires:
#            - cypress/install
#          filters:
#            branches:
#              only: develop
#      - deploy-production:
#          requires:
#            - cypress/install
#          filters:
#            branches:
#              only: master
#      - release:
#          requires:
#            - cypress/install
#          filters:
#            branches:
#              only: master
